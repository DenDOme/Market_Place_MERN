version: "3.8"

services:
  # API Gateway
  api-gateway:
    build: ./backend/APIGateway
    container_name: api_gateway
    ports:
      - "4003:4003"
    depends_on:
      - auth-service
      - product-service
      - order-service
    networks:
      - microservice_network
    env_file:
      - ./backend/APIGateway/.env

  # Auth Service
  auth-service:
    build: ./backend/AuthService
    container_name: auth_service
    ports:
      - "4000:4000"
    networks:
      - microservice_network
    env_file:
      - ./backend/AuthService/.env

  # Product Service
  product-service:
    build: ./backend/ProductService
    container_name: product_service
    ports:
      - "4001:4001"
    networks:
      - microservice_network
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file:
      - ./backend/ProductService/.env

  # Order Service
  order-service:
    build: ./backend/OrderService
    container_name: order_service
    ports:
      - "4002:4002"
    networks:
      - microservice_network
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file:
      - ./backend/OrderService/.env

  # Redis
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - microservice_network

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - microservice_network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      retries: 5
      start_period: 10s

  # Frontend
  # frontend:
  #   build: ./frontend
  #   container_name: frontend
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - api-gateway
  #   networks:
  #     - microservice_network

networks:
  microservice_network:
    driver: bridge
